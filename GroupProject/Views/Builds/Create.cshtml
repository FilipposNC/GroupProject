@model DataAccess.Core.Entities.Build

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Build</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BuilderID, "BuilderID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuilderID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuilderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaseID, "CaseID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CaseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CaseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPUID, "CPUID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" data-cpu-id="cpu">
                @Html.DropDownList("CPUID", null, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.CPUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherboardID, "MotherboardID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" motherboard-id="mobo">
                @Html.DropDownList("MotherboardID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MotherboardID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAMID, "RAMID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RAMID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RAMID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GPUID, "GPUID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GPUID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GPUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PSUID, "PSUID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PSUID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PSUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StorageID, "StorageID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StorageID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StorageID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAdminBuild, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAdminBuild)
                    @Html.ValidationMessageFor(model => model.IsAdminBuild, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@

    <script>
        $(document).ready(function () {
            $("#cpu").click(function (e) {
                var link = $(e.target);
                $.ajax({
                    url: "/api/builds/" + link.attr("data-cpu-id"),
                    method: "GET"
                }).done(function () {
                    link.method("GetMotherboards").target("motherboard-id");
                }).fail(function () {
                    alert("Something Failed")
                });
            });
        });
    </script>
}
